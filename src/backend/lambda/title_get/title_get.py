import json
import os

import boto3


def lambda_handler(event, context):
    """AWS Lambda handler function to retrieve a diary title from DynamoDB based on 
    the user ID and date provided in the request.

    This function:
    - Extracts the user ID from the context (using Cognito identity).
    - Extracts the date from the query parameters in the incoming event.
    - Retrieves the diary title from DynamoDB using the user ID and date.
    - Returns the title in a JSON response with an HTTP 200 status code.
    - Returns an empty title if no title is found.
    - Handles any exceptions and returns an HTTP 400 status code with an error message.

    Args:
        event (dict): Incoming request details, including query parameters and other data.
        context (object): The context object providing runtime information.

    Returns:
        dict: HTTP response with a status code, headers, JSON body.
    """
    try:
        user_id = event['requestContext']['authorizer']['claims']['sub']
        date = event["queryStringParameters"]["date"]

        # Fetch item from DynamoDB
        title = get_title_from_dynamodb(user_id, date)

        if title:
            return {
                "statusCode": 200,
                "body": json.dumps({"title": title}),
                "headers": {
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*",
                },
            }
        else:
            return {
                "statusCode": 200,
                "body": json.dumps({"title": ""}),
                "headers": {
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*",
                },
            }
    except Exception as e:
        print(f"error!! {e}")
        return {
            "statusCode": 400,
            "body": json.dumps(f"An error occurred: {str(e)}"),
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
            },
        }


def get_title_from_dynamodb(user_id, date):
    """Get title using user_id and date from dynamodb

    Args:
        user_id (string): user id from cognito userpool 
        date (string): date of the diary entry

    Returns:
        title (string): title generated by chatGPT

    """
    dynamodb = boto3.resource("dynamodb")
    table_name = os.environ["TABLE_NAME"]
    table = dynamodb.Table(table_name)

    try:
        response = table.get_item(Key={"user_id": user_id, "date": date})

        if "Item" in response:
            return response["Item"].get("title")
        else:
            return None
    except Exception as e:
        print(f"Error fetching data from DynamoDB: {e}")
        return None
