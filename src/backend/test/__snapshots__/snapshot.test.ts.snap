// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Snapshot test 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "ApiDiaryApiEndpoint6F62C6CD": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiDiaryApi1E03348A",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
            },
            "/",
          ],
        ],
      },
    },
    "ApiEndpoint": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiDiaryApi1E03348A",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
            },
            "/",
          ],
        ],
      },
    },
    "CognitoUserPoolClientId": {
      "Value": {
        "Ref": "AuthDiaryUserPoolClientC42D6E78",
      },
    },
    "CognitoUserPoolId": {
      "Value": {
        "Ref": "AuthUserPool8115E87F",
      },
    },
    "IdentityPoolId": {
      "Value": {
        "Ref": "IdentityIdentityPool01DA4AB2",
      },
    },
    "WebFrontend": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "WebCloudFrontDistributionAD0EA8F1",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "FlowerDifyApiKeyParameterC587C4DC": {
      "Default": "DIFY_API_KEY",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiAPIGatewayCloudWatchLogsRole38DC415F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiApiGatewayAccessLogsFB26645A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 14,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiCognitoAuthorizer23B91BA2": {
      "Properties": {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "CdkSampleStackApiCognitoAuthorizer07815F88",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "AuthUserPool8115E87F",
              "Arn",
            ],
          },
        ],
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "ApiDiaryApi1E03348A": {
      "Properties": {
        "Name": "DiaryApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiDiaryApiAccountD58FBD35": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ApiDiaryApi1E03348A",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiDiaryApiCloudWatchRole5768E80C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiDiaryApiCloudWatchRole5768E80C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiDiaryApiDeploymentCA0DCBF5f3a7764ce52a7d59be70d60865484dd8": {
      "DependsOn": [
        "ApiDiaryApibouquetGET7AC93032",
        "ApiDiaryApibouquetOPTIONSD0F71010",
        "ApiDiaryApibouquetPOST2DEB7999",
        "ApiDiaryApibouquet8BAEBF58",
        "ApiDiaryApidataGET0A09C29A",
        "ApiDiaryApidataOPTIONS781F505A",
        "ApiDiaryApidataA4E0EFBE",
        "ApiDiaryApidiaryDELETE81EA9C37",
        "ApiDiaryApidiaryGET9A212B54",
        "ApiDiaryApidiaryOPTIONS118FD5D0",
        "ApiDiaryApidiaryPOST0B03467C",
        "ApiDiaryApidiaryPUT140468F7",
        "ApiDiaryApidiary4B91FACA",
        "ApiDiaryApiflowerGETEAC01B09",
        "ApiDiaryApiflowerOPTIONS2A81112B",
        "ApiDiaryApiflower7C61878D",
        "ApiDiaryApiOPTIONS52308FBA",
        "ApiDiaryApisettingsGET4E223DBA",
        "ApiDiaryApisettingsOPTIONS58565844",
        "ApiDiaryApisettingsPOST5E845A8B",
        "ApiDiaryApisettings70D21EB5",
        "ApiDiaryApititleGET40FCE039",
        "ApiDiaryApititleOPTIONSCB7538FB",
        "ApiDiaryApititle5FEB75D0",
        "ApiDiaryApiRequestValidator4DFB42AA",
        "ApiDiaryApivalidator04323B87",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiDiaryApiDeploymentStageprodD9912276": {
      "DependsOn": [
        "ApiDiaryApiAccountD58FBD35",
      ],
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "ApiApiGatewayAccessLogsFB26645A",
              "Arn",
            ],
          },
          "Format": "{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","user":"$context.identity.user","caller":"$context.identity.caller","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}",
        },
        "DeploymentId": {
          "Ref": "ApiDiaryApiDeploymentCA0DCBF5f3a7764ce52a7d59be70d60865484dd8",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiDiaryApiOPTIONS52308FBA": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiDiaryApi1E03348A",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApiRequestValidator4DFB42AA": {
      "Properties": {
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "ApiDiaryApibouquet8BAEBF58": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiDiaryApi1E03348A",
            "RootResourceId",
          ],
        },
        "PathPart": "bouquet",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiDiaryApibouquetGET7AC93032": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BouquetbouquetGetFunction4A58F67E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": {
          "method.request.querystring.date": true,
        },
        "RequestValidatorId": {
          "Ref": "ApiDiaryApivalidator04323B87",
        },
        "ResourceId": {
          "Ref": "ApiDiaryApibouquet8BAEBF58",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApibouquetGETApiPermissionCdkSampleStackApiDiaryApi4AB3EF3AGETbouquetBD41F27D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BouquetbouquetGetFunction4A58F67E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/GET/bouquet",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApibouquetGETApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3AGETbouquet2E881FDA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BouquetbouquetGetFunction4A58F67E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/GET/bouquet",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApibouquetOPTIONSD0F71010": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiDiaryApibouquet8BAEBF58",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApibouquetPOST2DEB7999": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BouquetBouquetCreateF1E294AE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApibouquet8BAEBF58",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApibouquetPOSTApiPermissionCdkSampleStackApiDiaryApi4AB3EF3APOSTbouquet6272C54C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BouquetBouquetCreateF1E294AE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/POST/bouquet",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApibouquetPOSTApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3APOSTbouquet63D96D5B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BouquetBouquetCreateF1E294AE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/POST/bouquet",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidataA4E0EFBE": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiDiaryApi1E03348A",
            "RootResourceId",
          ],
        },
        "PathPart": "data",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiDiaryApidataGET0A09C29A": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DiarygetDiaryDataFunctionAAA49ECF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApidataA4E0EFBE",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApidataGETApiPermissionCdkSampleStackApiDiaryApi4AB3EF3AGETdata3D3C2AA4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarygetDiaryDataFunctionAAA49ECF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/GET/data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidataGETApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3AGETdata96E49F5D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarygetDiaryDataFunctionAAA49ECF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/GET/data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidataOPTIONS781F505A": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiDiaryApidataA4E0EFBE",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApidiary4B91FACA": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiDiaryApi1E03348A",
            "RootResourceId",
          ],
        },
        "PathPart": "diary",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiDiaryApidiaryDELETE81EA9C37": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "DELETE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DiarydiaryDeleteLambda7D51A24F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApidiary4B91FACA",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApidiaryDELETEApiPermissionCdkSampleStackApiDiaryApi4AB3EF3ADELETEdiaryFB9B75F4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryDeleteLambda7D51A24F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/DELETE/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidiaryDELETEApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3ADELETEdiary5E3D305B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryDeleteLambda7D51A24F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/DELETE/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidiaryGET9A212B54": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DiarydiaryReadLambda86C35E76",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApidiary4B91FACA",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApidiaryGETApiPermissionCdkSampleStackApiDiaryApi4AB3EF3AGETdiary5EA4CF99": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryReadLambda86C35E76",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/GET/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidiaryGETApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3AGETdiary4BE2D911": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryReadLambda86C35E76",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/GET/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidiaryOPTIONS118FD5D0": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiDiaryApidiary4B91FACA",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApidiaryPOST0B03467C": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DiarydiaryCreateLambda0AD0EFFF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApidiary4B91FACA",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApidiaryPOSTApiPermissionCdkSampleStackApiDiaryApi4AB3EF3APOSTdiary020586D3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryCreateLambda0AD0EFFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/POST/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidiaryPOSTApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3APOSTdiaryEAAFBFB1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryCreateLambda0AD0EFFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/POST/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidiaryPUT140468F7": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "PUT",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DiarydiaryEditLambda0E053A05",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApidiary4B91FACA",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApidiaryPUTApiPermissionCdkSampleStackApiDiaryApi4AB3EF3APUTdiary921A4CD0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryEditLambda0E053A05",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/PUT/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApidiaryPUTApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3APUTdiary924ADB1C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarydiaryEditLambda0E053A05",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/PUT/diary",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApiflower7C61878D": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiDiaryApi1E03348A",
            "RootResourceId",
          ],
        },
        "PathPart": "flower",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiDiaryApiflowerGETApiPermissionCdkSampleStackApiDiaryApi4AB3EF3AGETflowerC60F1232": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "FlowerflowerGetFunctionA4C511EA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/GET/flower",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApiflowerGETApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3AGETflower857DBEF7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "FlowerflowerGetFunctionA4C511EA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/GET/flower",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApiflowerGETEAC01B09": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "FlowerflowerGetFunctionA4C511EA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApiflower7C61878D",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApiflowerOPTIONS2A81112B": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiDiaryApiflower7C61878D",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApisettings70D21EB5": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiDiaryApi1E03348A",
            "RootResourceId",
          ],
        },
        "PathPart": "settings",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiDiaryApisettingsGET4E223DBA": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SettingsgetProfileImageFunctionDBA40214",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApisettings70D21EB5",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApisettingsGETApiPermissionCdkSampleStackApiDiaryApi4AB3EF3AGETsettings7E6B2258": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SettingsgetProfileImageFunctionDBA40214",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/GET/settings",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApisettingsGETApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3AGETsettings86A23BEE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SettingsgetProfileImageFunctionDBA40214",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/GET/settings",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApisettingsOPTIONS58565844": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiDiaryApisettings70D21EB5",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApisettingsPOST5E845A8B": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SettingsuploadProfileImageFunction5C7EC09C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApisettings70D21EB5",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApisettingsPOSTApiPermissionCdkSampleStackApiDiaryApi4AB3EF3APOSTsettings2B68743D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SettingsuploadProfileImageFunction5C7EC09C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/POST/settings",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApisettingsPOSTApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3APOSTsettingsAFB703A3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SettingsuploadProfileImageFunction5C7EC09C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/POST/settings",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApititle5FEB75D0": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiDiaryApi1E03348A",
            "RootResourceId",
          ],
        },
        "PathPart": "title",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiDiaryApititleGET40FCE039": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "ApiCognitoAuthorizer23B91BA2",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DiarytitleGetFunction90C2A326",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiDiaryApititle5FEB75D0",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApititleGETApiPermissionCdkSampleStackApiDiaryApi4AB3EF3AGETtitleFDF87F25": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarytitleGetFunction90C2A326",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/",
              {
                "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
              },
              "/GET/title",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApititleGETApiPermissionTestCdkSampleStackApiDiaryApi4AB3EF3AGETtitleAF893692": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DiarytitleGetFunction90C2A326",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiDiaryApi1E03348A",
              },
              "/test-invoke-stage/GET/title",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDiaryApititleOPTIONSCB7538FB": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiDiaryApititle5FEB75D0",
        },
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiDiaryApivalidator04323B87": {
      "Properties": {
        "Name": "ValidateQueryString",
        "RestApiId": {
          "Ref": "ApiDiaryApi1E03348A",
        },
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "AuthDiaryUserPoolClientC42D6E78": {
      "Properties": {
        "AllowedOAuthFlows": [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "ClientName": "diary-userpool-client",
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "AuthUserPool8115E87F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "Thanks for signing up! Your verification code is {####}",
        "EmailVerificationSubject": "Verify your email for our app!",
        "EnabledMfas": [
          "SMS_MFA",
          "SOFTWARE_TOKEN_MFA",
        ],
        "MfaConfiguration": "OPTIONAL",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
          },
        },
        "SmsConfiguration": {
          "ExternalId": "CdkSampleStackAuthUserPoolD87B233E",
          "SnsCallerArn": {
            "Fn::GetAtt": [
              "AuthUserPoolsmsRole664FB2D2",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "app-user-pool",
        "UsernameAttributes": [
          "email",
        ],
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "Thanks for signing up! Your verification code is {####}",
          "EmailSubject": "Verify your email for our app!",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "AuthUserPoolsmsRole664FB2D2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "CdkSampleStackAuthUserPoolD87B233E",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cognito-idp.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "sns-publish",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BouquetBouquetCreateF1E294AE": {
      "DependsOn": [
        "BouquetBouquetCreateServiceRoleDefaultPolicyDEB4D82F",
        "BouquetBouquetCreateServiceRole0729B026",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "BOUQUET_BUCKET_NAME": {
              "Ref": "BouquetbouquetBucket080B429F",
            },
            "BOUQUET_TABLE_NAME": {
              "Ref": "DiaryBouquetTableF76EF0C5",
            },
            "GENERATIVE_AI_TABLE_NAME": {
              "Ref": "FlowergenerativeAiTable021268D8",
            },
            "ORIGINAL_IMAGE_BUCKET_NAME": {
              "Ref": "FloweroriginalImageBucket5E40682A",
            },
          },
        },
        "Handler": "bouquet_create.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "BouquetBouquetCreateServiceRole0729B026",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BouquetBouquetCreateServiceRole0729B026": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BouquetBouquetCreateServiceRoleDefaultPolicyDEB4D82F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowergenerativeAiTable021268D8",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DiaryBouquetTableF76EF0C5",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FloweroriginalImageBucket5E40682A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FloweroriginalImageBucket5E40682A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "BouquetbouquetBucket080B429F",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BouquetBouquetCreateServiceRoleDefaultPolicyDEB4D82F",
        "Roles": [
          {
            "Ref": "BouquetBouquetCreateServiceRole0729B026",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BouquetbouquetBucket080B429F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "LoggingConfiguration": {
          "LogFilePrefix": "log/",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "BouquetbouquetBucketPolicy1552A5FD": {
      "Properties": {
        "Bucket": {
          "Ref": "BouquetbouquetBucket080B429F",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "BouquetbouquetBucket080B429F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "BouquetbouquetBucket080B429F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "BouquetbouquetGetFunction4A58F67E": {
      "DependsOn": [
        "BouquetbouquetGetFunctionServiceRoleDefaultPolicyC0CCF037",
        "BouquetbouquetGetFunctionServiceRole6DD6BC61",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "BUCKET_NAME": {
              "Ref": "BouquetbouquetBucket080B429F",
            },
          },
        },
        "Handler": "bouquet_get.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "BouquetbouquetGetFunctionServiceRole6DD6BC61",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BouquetbouquetGetFunctionServiceRole6DD6BC61": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BouquetbouquetGetFunctionServiceRoleDefaultPolicyC0CCF037": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "BouquetbouquetBucket080B429F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "BouquetbouquetBucket080B429F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BouquetbouquetGetFunctionServiceRoleDefaultPolicyC0CCF037",
        "Roles": [
          {
            "Ref": "BouquetbouquetGetFunctionServiceRole6DD6BC61",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "WebWebBuildDeployAwsCliLayer68908C46",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebS3Bucket9CF2DCDF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebS3Bucket9CF2DCDF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "WebS3LoggingBucketCA7CC78A",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DiaryBouquetTableF76EF0C5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "user_id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "year_week",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "user_id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "year_week",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "DiaryTitleGenerateLambda7612098A": {
      "DependsOn": [
        "DiarygenerativeAiLambdaRoleDefaultPolicy5FC5F15D",
        "DiarygenerativeAiLambdaRole98507273",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "FlowergenerativeAiTable021268D8",
            },
          },
        },
        "Handler": "title_generate.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DiarygenerativeAiLambdaRole98507273",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DiaryTitleGenerateLambdaDynamoDBEventSourceCdkSampleStackFlowerdiaryContentsTableA7A89C39CFB03C27": {
      "Properties": {
        "BatchSize": 100,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "FlowerdiaryContentsTableCA7C6940",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "DiaryTitleGenerateLambda7612098A",
        },
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "DiarydiaryCreateLambda0AD0EFFF": {
      "DependsOn": [
        "DiarydiaryCreateLambdaServiceRoleDefaultPolicy0A19DF93",
        "DiarydiaryCreateLambdaServiceRole86C8152B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "FLOWER_BUKCET_NAME": {
              "Ref": "FlowerflowerBucket9981D467",
            },
            "FLOWER_SELECT_FUNCTION_NAME": {
              "Ref": "FlowerflowerSelectFunctionD7EEBADA",
            },
            "IMAGE_PROCESSING_QUEUE_URL": {
              "Ref": "FlowerimageProcessingQueue525D6BA9",
            },
            "ORIGINAL_IMAGE_BUCKET_NAME": {
              "Ref": "FloweroriginalImageBucket5E40682A",
            },
            "TABLE_NAME": {
              "Ref": "FlowerdiaryContentsTableCA7C6940",
            },
          },
        },
        "Handler": "diary_create.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DiarydiaryCreateLambdaServiceRole86C8152B",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DiarydiaryCreateLambdaLogRetentionAE4FD8CA": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DiarydiaryCreateLambda0AD0EFFF",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DiarydiaryCreateLambdaServiceRole86C8152B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DiarydiaryCreateLambdaServiceRoleDefaultPolicy0A19DF93": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerdiaryContentsTableCA7C6940",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerflowerSelectFunctionD7EEBADA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FlowerflowerSelectFunctionD7EEBADA",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FloweroriginalImageBucket5E40682A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FloweroriginalImageBucket5E40682A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FlowerflowerBucket9981D467",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlowerimageProcessingQueue525D6BA9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DiarydiaryCreateLambdaServiceRoleDefaultPolicy0A19DF93",
        "Roles": [
          {
            "Ref": "DiarydiaryCreateLambdaServiceRole86C8152B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DiarydiaryDeleteLambda7D51A24F": {
      "DependsOn": [
        "DiarydiaryDeleteLambdaServiceRoleDefaultPolicyCB143309",
        "DiarydiaryDeleteLambdaServiceRole070CBD97",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "FlowerdiaryContentsTableCA7C6940",
            },
          },
        },
        "Handler": "diary_delete.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DiarydiaryDeleteLambdaServiceRole070CBD97",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DiarydiaryDeleteLambdaLogRetention162BA2D5": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DiarydiaryDeleteLambda7D51A24F",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DiarydiaryDeleteLambdaServiceRole070CBD97": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DiarydiaryDeleteLambdaServiceRoleDefaultPolicyCB143309": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:DeleteItem",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerdiaryContentsTableCA7C6940",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DiarydiaryDeleteLambdaServiceRoleDefaultPolicyCB143309",
        "Roles": [
          {
            "Ref": "DiarydiaryDeleteLambdaServiceRole070CBD97",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DiarydiaryEditLambda0E053A05": {
      "DependsOn": [
        "DiarydiaryEditLambdaServiceRoleDefaultPolicy02DD86CA",
        "DiarydiaryEditLambdaServiceRoleD8A73601",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "FlowerdiaryContentsTableCA7C6940",
            },
          },
        },
        "Handler": "diary_edit.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DiarydiaryEditLambdaServiceRoleD8A73601",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DiarydiaryEditLambdaLogRetention9304FA42": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DiarydiaryEditLambda0E053A05",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DiarydiaryEditLambdaServiceRoleD8A73601": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DiarydiaryEditLambdaServiceRoleDefaultPolicy02DD86CA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerdiaryContentsTableCA7C6940",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DiarydiaryEditLambdaServiceRoleDefaultPolicy02DD86CA",
        "Roles": [
          {
            "Ref": "DiarydiaryEditLambdaServiceRoleD8A73601",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DiarydiaryReadLambda86C35E76": {
      "DependsOn": [
        "DiarydiaryReadLambdaServiceRoleDefaultPolicy5BD63C5D",
        "DiarydiaryReadLambdaServiceRoleE103EA75",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "FlowerdiaryContentsTableCA7C6940",
            },
          },
        },
        "Handler": "diary_read.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DiarydiaryReadLambdaServiceRoleE103EA75",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DiarydiaryReadLambdaLogRetention3D1C85BD": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DiarydiaryReadLambda86C35E76",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DiarydiaryReadLambdaServiceRoleDefaultPolicy5BD63C5D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerdiaryContentsTableCA7C6940",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DiarydiaryReadLambdaServiceRoleDefaultPolicy5BD63C5D",
        "Roles": [
          {
            "Ref": "DiarydiaryReadLambdaServiceRoleE103EA75",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DiarydiaryReadLambdaServiceRoleE103EA75": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DiarygenerativeAiLambdaRole98507273": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DiarygenerativeAiLambdaRoleDefaultPolicy5FC5F15D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:DeleteRetentionPolicy",
                "logs:PutRetentionPolicy",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowergenerativeAiTable021268D8",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlowerdiaryContentsTableCA7C6940",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DiarygenerativeAiLambdaRoleDefaultPolicy5FC5F15D",
        "Roles": [
          {
            "Ref": "DiarygenerativeAiLambdaRole98507273",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DiarygetDiaryDataFunctionAAA49ECF": {
      "DependsOn": [
        "DiarygetDiaryDataFunctionServiceRoleDefaultPolicy5A0D2EBD",
        "DiarygetDiaryDataFunctionServiceRole505DDB87",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "BOUQUET_TABLE_NAME": {
              "Ref": "DiaryBouquetTableF76EF0C5",
            },
            "DIARY_TABLE_NAME": {
              "Ref": "FlowerdiaryContentsTableCA7C6940",
            },
            "FLOWER_BUCKET_NAME": {
              "Ref": "FlowerflowerBucket9981D467",
            },
            "GENERATIVE_AI_TABLE_NAME": {
              "Ref": "FlowergenerativeAiTable021268D8",
            },
          },
        },
        "Handler": "get_diary_data.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DiarygetDiaryDataFunctionServiceRole505DDB87",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DiarygetDiaryDataFunctionServiceRole505DDB87": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DiarygetDiaryDataFunctionServiceRoleDefaultPolicy5A0D2EBD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowergenerativeAiTable021268D8",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerflowerBucket9981D467",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FlowerflowerBucket9981D467",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerdiaryContentsTableCA7C6940",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DiaryBouquetTableF76EF0C5",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DiarygetDiaryDataFunctionServiceRoleDefaultPolicy5A0D2EBD",
        "Roles": [
          {
            "Ref": "DiarygetDiaryDataFunctionServiceRole505DDB87",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DiarytitleGetFunction90C2A326": {
      "DependsOn": [
        "DiarytitleGetFunctionServiceRoleDefaultPolicyF8576449",
        "DiarytitleGetFunctionServiceRoleF818E903",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "FlowergenerativeAiTable021268D8",
            },
          },
        },
        "Handler": "title_get.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DiarytitleGetFunctionServiceRoleF818E903",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DiarytitleGetFunctionServiceRoleDefaultPolicyF8576449": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowergenerativeAiTable021268D8",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DiarytitleGetFunctionServiceRoleDefaultPolicyF8576449",
        "Roles": [
          {
            "Ref": "DiarytitleGetFunctionServiceRoleF818E903",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DiarytitleGetFunctionServiceRoleF818E903": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FlowerdiaryContentsTableCA7C6940": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "user_id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "date",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "user_id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "date",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "FlowerflowerBucket9981D467": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "LoggingConfiguration": {
          "LogFilePrefix": "log/",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "FlowerflowerBucketPolicy784D0728": {
      "Properties": {
        "Bucket": {
          "Ref": "FlowerflowerBucket9981D467",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowerflowerBucket9981D467",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FlowerflowerBucket9981D467",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FlowerflowerGetFunctionA4C511EA": {
      "DependsOn": [
        "FlowerflowerGetFunctionServiceRoleDefaultPolicy62A02DD7",
        "FlowerflowerGetFunctionServiceRoleDBDC55E1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "FLOWER_BUCKET_NAME": {
              "Ref": "FlowerflowerBucket9981D467",
            },
            "GENERATIVE_AI_TABLE_NAME": {
              "Ref": "FlowergenerativeAiTable021268D8",
            },
            "ORIGINAL_BUCKET_NAME": {
              "Ref": "FloweroriginalImageBucket5E40682A",
            },
          },
        },
        "Handler": "flower_get.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "FlowerflowerGetFunctionServiceRoleDBDC55E1",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FlowerflowerGetFunctionServiceRoleDBDC55E1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FlowerflowerGetFunctionServiceRoleDefaultPolicy62A02DD7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FloweroriginalImageBucket5E40682A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FloweroriginalImageBucket5E40682A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowergenerativeAiTable021268D8",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FlowerflowerGetFunctionServiceRoleDefaultPolicy62A02DD7",
        "Roles": [
          {
            "Ref": "FlowerflowerGetFunctionServiceRoleDBDC55E1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FlowerflowerSelectFunctionD7EEBADA": {
      "DependsOn": [
        "FlowerflowerSelectFunctionServiceRoleDefaultPolicy7F8366A3",
        "FlowerflowerSelectFunctionServiceRoleDF0A249F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "DIARY_TABLE_NAME": {
              "Ref": "FlowerdiaryContentsTableCA7C6940",
            },
            "FLOWER_BUCKET_NAME": {
              "Ref": "FlowerflowerBucket9981D467",
            },
            "GENERATIVE_AI_TABLE_NAME": {
              "Ref": "FlowergenerativeAiTable021268D8",
            },
            "ORIGINAL_IMAGE_BUCKET_NAME": {
              "Ref": "FloweroriginalImageBucket5E40682A",
            },
          },
        },
        "Handler": "flower_select.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "FlowerflowerSelectFunctionServiceRoleDF0A249F",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FlowerflowerSelectFunctionServiceRoleDF0A249F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FlowerflowerSelectFunctionServiceRoleDefaultPolicy7F8366A3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowergenerativeAiTable021268D8",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FlowerflowerBucket9981D467",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlowerdiaryContentsTableCA7C6940",
                  "StreamArn",
                ],
              },
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FloweroriginalImageBucket5E40682A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/DIFY_API_KEY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FlowerflowerSelectFunctionServiceRoleDefaultPolicy7F8366A3",
        "Roles": [
          {
            "Ref": "FlowerflowerSelectFunctionServiceRoleDF0A249F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FlowerflowerVaseFunction1C19C631": {
      "DependsOn": [
        "FlowerflowerVaseFunctionServiceRoleDefaultPolicy6262F976",
        "FlowerflowerVaseFunctionServiceRole8A20BA4C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "FLOWER_BUCKET_NAME": {
              "Ref": "FlowerflowerBucket9981D467",
            },
            "ORIGINAL_IMAGE_BUCKET_NAME": {
              "Ref": "FloweroriginalImageBucket5E40682A",
            },
            "QUEUE_URL": {
              "Ref": "FlowerimageProcessingQueue525D6BA9",
            },
          },
        },
        "Handler": "flower_vase.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "FlowerflowerVaseFunctionServiceRole8A20BA4C",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FlowerflowerVaseFunctionServiceRole8A20BA4C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FlowerflowerVaseFunctionServiceRoleDefaultPolicy6262F976": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FloweroriginalImageBucket5E40682A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FloweroriginalImageBucket5E40682A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "FlowerflowerBucket9981D467",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlowerimageProcessingQueue525D6BA9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FlowerflowerVaseFunctionServiceRoleDefaultPolicy6262F976",
        "Roles": [
          {
            "Ref": "FlowerflowerVaseFunctionServiceRole8A20BA4C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FlowerflowerVaseFunctionSqsEventSourceCdkSampleStackFlowerimageProcessingQueue4AF977BA89A9400D": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "FlowerimageProcessingQueue525D6BA9",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "FlowerflowerVaseFunction1C19C631",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "FlowergenerativeAiTable021268D8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "user_id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "date",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "user_id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "date",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "FlowerimageProcessingDLQ1A2E688D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "FlowerimageProcessingDLQPolicy4DD592F8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "FlowerimageProcessingDLQ1A2E688D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "FlowerimageProcessingDLQ1A2E688D",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "FlowerimageProcessingQueue525D6BA9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "MessageRetentionPeriod": 345600,
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "FlowerimageProcessingDLQ1A2E688D",
              "Arn",
            ],
          },
          "maxReceiveCount": 5,
        },
        "VisibilityTimeout": 300,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "FlowerimageProcessingQueuePolicy59A9ABCE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "FlowerimageProcessingQueue525D6BA9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "FlowerimageProcessingQueue525D6BA9",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "FloweroriginalImageBucket5E40682A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "LoggingConfiguration": {
          "LogFilePrefix": "log/",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "FloweroriginalImageBucketPolicyFA65F301": {
      "Properties": {
        "Bucket": {
          "Ref": "FloweroriginalImageBucket5E40682A",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FloweroriginalImageBucket5E40682A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FloweroriginalImageBucket5E40682A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "IdentityIdentityPool01DA4AB2": {
      "DependsOn": [
        "AuthDiaryUserPoolClientC42D6E78",
        "AuthUserPool8115E87F",
        "AuthUserPoolsmsRole664FB2D2",
      ],
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "AuthDiaryUserPoolClientC42D6E78",
            },
            "ProviderName": {
              "Fn::Join": [
                "",
                [
                  "cognito-idp.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Ref": "AuthUserPool8115E87F",
                  },
                ],
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "IdentityIdentityPoolAuthenticatedRole64B093CC": {
      "DependsOn": [
        "AuthDiaryUserPoolClientC42D6E78",
        "AuthUserPool8115E87F",
        "AuthUserPoolsmsRole664FB2D2",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "IdentityIdentityPool01DA4AB2",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Authenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "IdentityIdentityPool01DA4AB2",
                  "Name",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IdentityIdentityPoolDefaultRoleAttachment4BE337B3": {
      "DependsOn": [
        "AuthDiaryUserPoolClientC42D6E78",
        "AuthUserPool8115E87F",
        "AuthUserPoolsmsRole664FB2D2",
      ],
      "Properties": {
        "IdentityPoolId": {
          "Ref": "IdentityIdentityPool01DA4AB2",
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "IdentityIdentityPoolAuthenticatedRole64B093CC",
              "Arn",
            ],
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "IdentityIdentityPoolUnauthenticatedRole459CD562",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "IdentityIdentityPoolUnauthenticatedRole459CD562": {
      "DependsOn": [
        "AuthDiaryUserPoolClientC42D6E78",
        "AuthUserPool8115E87F",
        "AuthUserPoolsmsRole664FB2D2",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "IdentityIdentityPool01DA4AB2",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Unauthenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "IdentityIdentityPool01DA4AB2",
                  "Name",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "LogBucketCC3B17E8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "LoggingConfiguration": {
          "LogFilePrefix": "log/",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "LogBucketPolicy900DBE48": {
      "Properties": {
        "Bucket": {
          "Ref": "LogBucketCC3B17E8",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LogBucketCC3B17E8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LogBucketCC3B17E8",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8": {
      "DependsOn": [
        "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3",
        "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebWebBuildProjectAC70B4C2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3",
        "Roles": [
          {
            "Ref": "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SettingsgetProfileImageFunctionDBA40214": {
      "DependsOn": [
        "SettingsgetProfileImageFunctionServiceRoleDefaultPolicyBC909A15",
        "SettingsgetProfileImageFunctionServiceRole36952281",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "USER_SETTINGS_BUCKET": {
              "Ref": "SettingsuserSettingsBucket1D2B648F",
            },
          },
        },
        "Handler": "get_profile_image.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "SettingsgetProfileImageFunctionServiceRole36952281",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SettingsgetProfileImageFunctionServiceRole36952281": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SettingsgetProfileImageFunctionServiceRoleDefaultPolicyBC909A15": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SettingsuserSettingsBucket1D2B648F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SettingsuserSettingsBucket1D2B648F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SettingsgetProfileImageFunctionServiceRoleDefaultPolicyBC909A15",
        "Roles": [
          {
            "Ref": "SettingsgetProfileImageFunctionServiceRole36952281",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SettingsuploadProfileImageFunction5C7EC09C": {
      "DependsOn": [
        "SettingsuploadProfileImageFunctionServiceRoleDefaultPolicy8B4E4832",
        "SettingsuploadProfileImageFunctionServiceRoleC037996C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "USER_SETTINGS_BUCKET": {
              "Ref": "SettingsuserSettingsBucket1D2B648F",
            },
          },
        },
        "Handler": "upload_profile_image.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "SettingsuploadProfileImageFunctionServiceRoleC037996C",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SettingsuploadProfileImageFunctionServiceRoleC037996C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SettingsuploadProfileImageFunctionServiceRoleDefaultPolicy8B4E4832": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "SettingsuserSettingsBucket1D2B648F",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SettingsuploadProfileImageFunctionServiceRoleDefaultPolicy8B4E4832",
        "Roles": [
          {
            "Ref": "SettingsuploadProfileImageFunctionServiceRoleC037996C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SettingsuserSettingsBucket1D2B648F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*",
              ],
              "AllowedMethods": [
                "GET",
                "POST",
              ],
              "AllowedOrigins": [
                "*",
              ],
            },
          ],
        },
        "LoggingConfiguration": {
          "LogFilePrefix": "log/",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "SettingsuserSettingsBucketPolicyACEFAD72": {
      "Properties": {
        "Bucket": {
          "Ref": "SettingsuserSettingsBucket1D2B648F",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SettingsuserSettingsBucket1D2B648F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SettingsuserSettingsBucket1D2B648F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "WebCloudFrontDistributionAD0EA8F1": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W70",
              "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion",
            },
          ],
        },
      },
      "Properties": {
        "DistributionConfig": {
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "CdkSampleStackWebCloudFrontDistributionOrigin15394C2AE",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "WebCloudfrontLoggingBucket08FB1412",
                "RegionalDomainName",
              ],
            },
          },
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebS3Bucket9CF2DCDF",
                  "RegionalDomainName",
                ],
              },
              "Id": "CdkSampleStackWebCloudFrontDistributionOrigin15394C2AE",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "WebCloudFrontDistributionOrigin1S3Origin3E1C3656",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Restrictions": {
            "GeoRestriction": {
              "Locations": [
                "JP",
              ],
              "RestrictionType": "whitelist",
            },
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "WebCloudFrontDistributionOrigin1S3Origin3E1C3656": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for CdkSampleStackWebCloudFrontDistributionOrigin15394C2AE",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "WebCloudfrontLoggingBucket08FB1412": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for CloudFront Distribution",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "LogFilePrefix": "logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "WebCloudfrontLoggingBucketAutoDeleteObjectsCustomResourceF2C19050": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "WebCloudfrontLoggingBucketPolicy17D0B5FF",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "WebCloudfrontLoggingBucket08FB1412",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "WebCloudfrontLoggingBucketPolicy17D0B5FF": {
      "Properties": {
        "Bucket": {
          "Ref": "WebCloudfrontLoggingBucket08FB1412",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebCloudfrontLoggingBucket08FB1412",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebCloudfrontLoggingBucket08FB1412",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "WebCloudfrontLoggingBucket08FB1412",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebCloudfrontLoggingBucket08FB1412",
                        "Arn",
                      ],
                    },
                    "/logs*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebCloudfrontLoggingBucket08FB1412",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebCloudfrontLoggingBucket08FB1412",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "WebS3Bucket9CF2DCDF": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "WebS3LoggingBucketCA7CC78A",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:757f7d11",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "WebS3BucketAutoDeleteObjectsCustomResourceDCA1247A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "WebS3BucketPolicyF6E18E3E",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "WebS3Bucket9CF2DCDF",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "WebS3BucketPolicyF6E18E3E": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "F16",
              "reason": "Public website bucket policy requires a wildcard principal",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "WebS3Bucket9CF2DCDF",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebS3Bucket9CF2DCDF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebS3Bucket9CF2DCDF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebS3Bucket9CF2DCDF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebS3Bucket9CF2DCDF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "WebCloudFrontDistributionOrigin1S3Origin3E1C3656",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebS3Bucket9CF2DCDF",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "WebS3LoggingBucketAutoDeleteObjectsCustomResourceC2326C06": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "WebS3LoggingBucketPolicy1F646513",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "WebS3LoggingBucketCA7CC78A",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "WebS3LoggingBucketCA7CC78A": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": {
          "LogFilePrefix": "logs",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "WebS3LoggingBucketPolicy1F646513": {
      "Properties": {
        "Bucket": {
          "Ref": "WebS3LoggingBucketCA7CC78A",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebS3LoggingBucketCA7CC78A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebS3LoggingBucketCA7CC78A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "WebS3LoggingBucketCA7CC78A",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebS3LoggingBucketCA7CC78A",
                        "Arn",
                      ],
                    },
                    "/logs*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebS3LoggingBucketCA7CC78A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebS3LoggingBucketCA7CC78A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "WebS3Bucket9CF2DCDF",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebS3LoggingBucketCA7CC78A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "WebWebBuildDeployAwsCliLayer68908C46": {
      "DependsOn": [
        "WebWebBuildE02F9377",
      ],
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "HASH_REPLACED.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "WebWebBuildDeployCustomResourceBA5A1DA7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "WebWebBuildE02F9377",
      ],
      "Properties": {
        "DestinationBucketName": {
          "Ref": "WebS3Bucket9CF2DCDF",
        },
        "DistributionId": {
          "Ref": "WebCloudFrontDistributionAD0EA8F1",
        },
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          {
            "Fn::GetAtt": [
              "WebWebBuildE02F9377",
              "destinationObjectKey",
            ],
          },
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "WebWebBuildE02F9377": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8",
            "Arn",
          ],
        },
        "buildCommands": [
          "npm install -w src/frontend",
          "npm run build -w src/frontend",
        ],
        "codeBuildProjectName": {
          "Ref": "WebWebBuildProjectAC70B4C2",
        },
        "destinationBucketName": {
          "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
        },
        "environment": {
          "VITE_API_ENDPOINT": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiDiaryApi1E03348A",
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/",
                {
                  "Ref": "ApiDiaryApiDeploymentStageprodD9912276",
                },
                "/",
              ],
            ],
          },
          "VITE_COGNITO_APP_USER_POOL_CLIENT_ID": {
            "Ref": "AuthDiaryUserPoolClientC42D6E78",
          },
          "VITE_COGNITO_REGION": {
            "Ref": "AWS::Region",
          },
          "VITE_COGNITO_USER_POOL_ID": {
            "Ref": "AuthUserPool8115E87F",
          },
        },
        "outputEnvFile": false,
        "outputSourceDirectory": "../src/frontend/dist",
        "sources": [
          {
            "extractPath": "..",
            "sourceBucketName": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "sourceObjectKey": "HASH_REPLACED.zip",
          },
        ],
        "type": "NodejsBuild",
        "workingDirectory": "..",
      },
      "Type": "Custom::CDKNodejsBuild",
      "UpdateReplacePolicy": "Delete",
    },
    "WebWebBuildProjectAC70B4C2": {
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "WebWebBuildProjectRoleAFB9DADB",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "env": {
    "shell": "bash"
  },
  "phases": {
    "install": {
      "runtime-versions": {
        "nodejs": 18
      }
    },
    "build": {
      "commands": [
        "current_dir=$(pwd)",
        "\\necho \\"$input\\"\\nfor obj in $(echo \\"$input\\" | jq -r '.[] | @base64'); do\\n  decoded=$(echo \\"$obj\\" | base64 --decode)\\n  assetUrl=$(echo \\"$decoded\\" | jq -r '.assetUrl')\\n  extractPath=$(echo \\"$decoded\\" | jq -r '.extractPath')\\n  commands=$(echo \\"$decoded\\" | jq -r '.commands')\\n\\n  # Download the zip file\\n  aws s3 cp \\"$assetUrl\\" temp.zip\\n\\n  # Extract the zip file to the extractPath directory\\n  mkdir -p \\"$extractPath\\"\\n  unzip temp.zip -d \\"$extractPath\\"\\n\\n  # Remove the zip file\\n  rm temp.zip\\n\\n  # Run the specified commands in the extractPath directory\\n  cd \\"$extractPath\\"\\n  ls -la\\n  eval \\"$commands\\"\\n  cd \\"$current_dir\\"\\n  ls -la\\ndone\\n              ",
        "ls -la",
        "cd \\"$workingDirectory\\"",
        "eval \\"$buildCommands\\"",
        "ls -la",
        "cd \\"$current_dir\\"",
        "cd \\"$outputSourceDirectory\\"",
        "zip -r output.zip ./",
        "aws s3 cp output.zip \\"s3://$destinationBucketName/$destinationObjectKey\\"",
        "\\nif [[ $outputEnvFile == \\"true\\" ]]\\nthen\\n  # Split the comma-separated string into an array\\n  for var_name in \${envNames//,/ }\\n  do\\n      echo \\"Element: $var_name\\"\\n      var_value=\\"\${!var_name}\\"\\n      echo \\"$var_name=$var_value\\" >> tmp.env\\n  done\\n\\n  aws s3 cp tmp.env \\"s3://$destinationBucketName/$envFileKey\\"\\nfi\\n              "
      ]
    },
    "post_build": {
      "commands": [
        "echo Build completed on \`date\`",
        "\\nSTATUS='SUCCESS'\\nif [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ] # Test if the build is failing\\nthen\\nSTATUS='FAILED'\\nREASON=\\"NodejsBuild failed. See CloudWatch Log stream for the detailed reason: \\nhttps://$AWS_REGION.console.aws.amazon.com/cloudwatch/home?region=$AWS_REGION#logsV2:log-groups/log-group/\\\\$252Faws\\\\$252Fcodebuild\\\\$252F$projectName/log-events/$CODEBUILD_LOG_PATH\\"\\nfi\\ncat <<EOF > payload.json\\n{\\n  \\"StackId\\": \\"$stackId\\",\\n  \\"RequestId\\": \\"$requestId\\",\\n  \\"LogicalResourceId\\":\\"$logicalResourceId\\",\\n  \\"PhysicalResourceId\\": \\"$logicalResourceId\\",\\n  \\"Status\\": \\"$STATUS\\",\\n  \\"Reason\\": \\"$REASON\\",\\n  \\"Data\\": {\\n    \\"destinationObjectKey\\": \\"$destinationObjectKey\\",\\n    \\"envFileKey\\": \\"$envFileKey\\"\\n  }\\n}\\nEOF\\ncurl -v -i -X PUT -H 'Content-Type:' -d \\"@payload.json\\" \\"$responseURL\\"\\n              "
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "WebWebBuildProjectRoleAFB9DADB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "WebWebBuildProjectRoleDefaultPolicy6BE2F3EC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "WebWebBuildProjectAC70B4C2",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "WebWebBuildProjectAC70B4C2",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "WebWebBuildProjectAC70B4C2",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WebWebBuildProjectRoleDefaultPolicy6BE2F3EC",
        "Roles": [
          {
            "Ref": "WebWebBuildProjectRoleAFB9DADB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
